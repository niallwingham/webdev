<article>
	<h1>@ViewBag.Title</h1>
	<h2>Types & Conversions</h2>
	<ul>
		<li>Base types: undefined, null, Boolean, String, Number, Object</li>
		<li>Built-in object types: RegExp, Date, Array, Function, Math</li>
		<li>Autoboxing/unboxing (valueOf method)</li>
		<li>Implicit conversion and fuzzy equality</li>
	</ul>
	<h2>Scope & Closures</h2>
	<ul>
		<li>Global object (window)</li>
		<li>Variable definitions, hoisting, special variables (arguments, this)</li>
		<li>Scope chains in functions</li>
		<li>Closures</li>
		<li>Inducing scope through IIFEs (asynchronous loop example)</li>
	</ul>
	<h2>Objects & Prototypes</h2>
	<ul>
		<li>JavaScript is object oriented with prototype delegation but no classes</li>
		<li>Classes
			<ul>
				<li>Class defines structure, object contains mutable state</li>
				<li>Properties copied down to object instances</li>
				<li>Methods resolved by hierarchical search</li>
				<li>Class hierarchy is static</li>
			</ul>
		</li>
		<li>Prototypes
			<ul>
				<li>Object contains mutable state and structure</li>
				<li>No difference between methods and properties, all resolved by prototype search</li>
				<li>Prototype hierarchy is dynamic</li>
				<li>Duck typing ("if it quacks like a duck...")</li>
			</ul>
		</li>
		<li>Object initialization
			<ul>
				<li><code>new</code> expressions and <code>this</code></li>
				<li>The constructor property on the object's prototype</li>
				<li>Creating prototype chains</li>
			</ul>
		</li>
		<li>Properties and property descriptors
			<ul>
				<li>Value descriptor vs. accessor descriptor</li>
				<li>Configurable, enumerable</li>
				<li>Frozen & sealed objects</li>
			</ul>
		</li>
		<li>Private variable pattern</li>
	</ul>
	<h2>Evolution of the Standard</h2>
	<ul>
		<li>Creation at netscape</li>
		<li>Reverse engineering by Microsoft (JScript)</li>
		<li>Handover to ECMA and Mozilla</li>
		<li>Strict mode</li>
		<li>Harmony</li>
	</ul>
	<h2>The Document Object Model</h2>
	<ul>
		<li>Programmatic interface to the HTML document</li>
		<li>Nodes vs. elements (whitespace, attributes, etc.)</li>
		<li>Traversing & manipulating nodes</li>
		<li>Events & bubbling</li>
		<li>The DOM is <em>slow!</em></li>
	</ul>
</article>
